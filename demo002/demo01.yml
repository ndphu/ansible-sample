#!/usr/bin/env ansible-playbook
---
 - name: Prepare DB server
   hosts: docker1
   vars_files:
    - demo_conf.yml
   vars:
      mysql_container: mysql_demo01
   tasks:
    - name: Start mysql container
      docker:
        name: "{{ mysql_container }}"
        image: mysql
        state: running
        expose:
         - "3306"
        ports:
         - "3306"
        env:
          MYSQL_ROOT_PASSWORD={{ db_login_password }}

    - name: Get mysql host
      shell: docker inspect "{{ mysql_container }}" | grep IPAddress | cut -d '"' -f4
      register: db_container_ip


    - name: Get dynamic port
      shell: docker port "{{ mysql_container }}" | cut -d':' -f2
      register: db_container_dynamic_port

    - name: Print container IP Address
      debug: var=db_container_ip.stdout

    - name: DB Login user
      debug: var=db_login_user

    - name: DB Login password
      debug: var=db_login_password

    - name: Print container Dynamic port
      debug: var=db_container_dynamic_port.stdout

    - name: Copy schema script
      copy: src=init-db.sql dest=/tmp

    - name: Create DB
      mysql_db: 
        name: taskmanager 
        state: present
        login_host: "{{ db_container_ip.stdout }}"
        login_user: "{{ db_login_user }}"
        login_password: "{{ db_login_password }}"

    - name: Init db
      mysql_db: 
        login_host: "{{ db_container_ip.stdout }}"
        login_user: "{{ db_login_user }}"
        login_password: "{{ db_login_password }}"
        state: import
        name: taskmanager
        target: /tmp/init-db.sql


 - hosts: docker3
   name: Start web container on docker#3
   remote_user: root
   vars_files:
    - demo_conf.yml
   vars:
     web_container: web_container_002
   tasks:
    - name: Start web container
      docker:
        name: "{{ web_container }}"
        image: ndphu/ubuntu-ssh
        state: running
        expose:
         - "{{ web_port }}"
         - "{{ ssh_port }}"
        ports:
         - "{{ web_port }}"
         - "{{ ssh_port }}"
        stdin_open: yes
        tty: yes

    - name: Get "{{ web_container }}" host
      shell: docker inspect "{{ web_container }}" | grep IPAddress | cut -d '"' -f4
      register: web_container_ip


    - name: Print Web container IP Address
      debug: var=web_container_ip.stdout

    - name: Get dynamic Web port
      shell: docker port "{{ web_container }}" | grep "{{ web_port }}" | cut -d':' -f2
      register: web_container_dynamic_port
   
    - name: Print dynamic Web port
      debug: var=web_container_dynamic_port.stdout

    - name: Get dynamic SSH port
      shell: docker port "{{ web_container }}" | grep "{{ ssh_port }}" | cut -d':' -f2
      register: web_container_ssh_dynamic_port

    - name: Print dynamic SSH port
      debug: var=web_container_ssh_dynamic_port.stdout
      
    - name: Update web hosts
      add_host: name="{{ ansible_ssh_host }}:{{ web_container_ssh_dynamic_port.stdout }}" groups=web_containers

 - hosts: local
   remote_user: ndphu
   tasks:
    - name: Copy key
      shell: sshpass -p s3cr3t ssh-copy-id -i ~/.ssh/id_rsa.pub -p "{{ hostvars.docker3.web_container_ssh_dynamic_port.stdout }}" ndphu@"{{ hostvars.docker3.ansible_ssh_host }}"
    
      
 - hosts: web_containers
   name: Deploy app to web container
   remote_user: ndphu
   sudo: yes
   vars_files:
    - demo_conf.yml
   tasks:
    - name: Create jre directory
      file: name=/opt/jre7 state=directory

    - name: Extract JRE7
      unarchive:
        src: app/jre7.gz
        dest: /opt/jre7

    - name: Kill the previous app instance
      shell: ps -e | grep java | awk 'BEGIN{FS=" +"}{print $2}' | while read pid; do kill -9 $pid; done

    - name: Create app dir
      file: name=/opt/app state=directory

    - name: Copy app
      copy:
        src: app/webapp.jar
        dest: /opt/app

    - name: Create config dir
      file: name=/opt/app/conf state=directory


    - name: Copy template config file
      template:
        src: app/conf/application.properties.j2
        dest: /opt/app/conf/application.properties


    - name: Start the app
      shell: cd /opt/app && nohup /opt/jre7/jre1.7.0_79/bin/java -jar /opt/app/webapp.jar &


